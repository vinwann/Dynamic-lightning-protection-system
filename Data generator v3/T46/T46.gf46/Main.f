!=======================================================================
! Generated by: PSCAD v5.0.2.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Main
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE MainDyn()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    psseDyn       ! 
!     SUBR    T7_8Dyn       ! 
!     SUBR    T8_9Dyn       ! 
!     SUBR    T5_7Dyn       ! 
!     SUBR    T6_9Dyn       ! 
!     SUBR    T4_5Dyn       ! 
!     SUBR    T4_6Dyn       ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  Bus2(3), Bus3(3), Bus1(3)

! Control Signals
      REAL     RT_1, RT_2, RT_3, E9(3), E7(3)
      REAL     I9(3), E4(3), I7(3), I4(3)
      REAL     Ea_1(3)

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD1_7

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 24
      NPGB      = NPGB + 18
      INODE     = NNODE + 2
      NNODE     = NNODE + 38
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 72
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 9
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_1     = STOF(ISTOF + 1)
      RT_2     = STOF(ISTOF + 2)
      RT_3     = STOF(ISTOF + 3)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         E9(IT_0) = STOF(ISTOF + 3 + IT_0)
         E7(IT_0) = STOF(ISTOF + 6 + IT_0)
         I9(IT_0) = STOF(ISTOF + 9 + IT_0)
         E4(IT_0) = STOF(ISTOF + 12 + IT_0)
         I7(IT_0) = STOF(ISTOF + 15 + IT_0)
         I4(IT_0) = STOF(ISTOF + 18 + IT_0)
         Ea_1(IT_0) = STOF(ISTOF + 21 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         Bus2(IT_0) = NODE(INODE + 15 + IT_0)
         Bus3(IT_0) = NODE(INODE + 18 + IT_0)
         Bus1(IT_0) = NODE(INODE + 24 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[psse]  
      CALL psseDyn()


! 20:[const] Real Constant 
      RT_2 = 1.0

! 50:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+34), (IBRCH+35), (IBRCH+36),SS,RT_2,0)
      CALL TRTAP5((IXFMR + 1), 1, SS, RT_2)
      CALL TRTAP5((IXFMR + 2), 1, SS, RT_2)
      CALL TRTAP5((IXFMR + 3), 1, SS, RT_2)

! 70:[const] Real Constant 
      RT_1 = 1.0

! 90:[T7_8]  
      CALL T7_8Dyn()


! 100:[T8_9]  
      CALL T8_9Dyn()


! 120:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+7), (IBRCH+8), (IBRCH+9),SS,RT_1,0)
      CALL TRTAP5((IXFMR + 4), 1, SS, RT_1)
      CALL TRTAP5((IXFMR + 5), 1, SS, RT_1)
      CALL TRTAP5((IXFMR + 6), 1, SS, RT_1)

! 130:[T5_7]  
      CALL T5_7Dyn()


! 140:[T6_9]  
      CALL T6_9Dyn()


! 150:[T4_5]  
      CALL T4_5Dyn()


! 160:[T4_6]  
      CALL T4_6Dyn()


! 190:[const] Real Constant 
      RT_3 = 1.0

! 200:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+64), (IBRCH+65), (IBRCH+66),SS,RT_3,0)
      CALL TRTAP5((IXFMR + 7), 1, SS, RT_3)
      CALL TRTAP5((IXFMR + 8), 1, SS, RT_3)
      CALL TRTAP5((IXFMR + 9), 1, SS, RT_3)

! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
!  3-Phase source: Source1
      RVD1_1 = RTCF(NRTCF+12)
      RVD1_2 = RTCF(NRTCF+14)
      RVD1_3 = RTCF(NRTCF+13)
      CALL ESYS651_EXE(SS, (IBRCH+25), (IBRCH+26), (IBRCH+27),0,0,0, SS,&
     & Bus2(1),Bus2(2),Bus2(3), 0, RVD1_2, RVD1_1, 0.05, 1.0, 1.0, 1.0,R&
     &VD1_3, 1.0,0.02,0.05, 1.0,0.02,0.05, RVD1_4, RVD1_5, RVD1_6, RVD1_&
     &7)

! 1:[arrester] Arrester 
!  Metal Oxide Gapless Surge Arrester: 
      CALL COMPONENT_ID(ICALL_NO,1846882272)
      CALL ARRESTERZNO_EXE(SS, (IBRCH+37),1)
      CALL ARRESTERZNO_EXE(SS, (IBRCH+38),1)
      CALL ARRESTERZNO_EXE(SS, (IBRCH+39),1)

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,1412276095)
      CALL LOAD3P2_EXE(SS, (IBRCH+43), (IBRCH+44), (IBRCH+45), (IBRCH+46&
     &), (IBRCH+47), (IBRCH+48),1.0)

! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
!  3-Phase source: Source1
      RVD1_1 = RTCF(NRTCF+12)
      RVD1_2 = RTCF(NRTCF+14)
      RVD1_3 = RTCF(NRTCF+13)
      CALL ESYS651_EXE(SS, (IBRCH+10), (IBRCH+11), (IBRCH+12),0,0,0, SS,&
     & Bus3(1),Bus3(2),Bus3(3), 0, RVD1_2, RVD1_1, 0.05, 1.0, 1.0, 1.0,R&
     &VD1_3, 1.0,0.02,0.05, 1.0,0.02,0.05, RVD1_4, RVD1_5, RVD1_6, RVD1_&
     &7)

! 1:[arrester] Arrester 
!  Metal Oxide Gapless Surge Arrester: 
      CALL COMPONENT_ID(ICALL_NO,2035328747)
      CALL ARRESTERZNO_EXE(SS, (IBRCH+16),1)
      CALL ARRESTERZNO_EXE(SS, (IBRCH+17),1)
      CALL ARRESTERZNO_EXE(SS, (IBRCH+18),1)

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,1275297413)
      CALL LOAD3P2_EXE(SS, (IBRCH+19), (IBRCH+20), (IBRCH+21), (IBRCH+22&
     &), (IBRCH+23), (IBRCH+24),1.0)

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,1442847532)
      CALL LOAD3P2_EXE(SS, (IBRCH+49), (IBRCH+50), (IBRCH+51), (IBRCH+52&
     &), (IBRCH+53), (IBRCH+54),1.0)

! 1:[arrester] Arrester 
!  Metal Oxide Gapless Surge Arrester: 
      CALL COMPONENT_ID(ICALL_NO,646045917)
      CALL ARRESTERZNO_EXE(SS, (IBRCH+67),1)
      CALL ARRESTERZNO_EXE(SS, (IBRCH+68),1)
      CALL ARRESTERZNO_EXE(SS, (IBRCH+69),1)

! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
!  3-Phase source: Source1
      RVD1_1 = RTCF(NRTCF+12)
      RVD1_2 = RTCF(NRTCF+14)
      RVD1_3 = RTCF(NRTCF+13)
      CALL ESYS651_EXE(SS, (IBRCH+55), (IBRCH+56), (IBRCH+57),0,0,0, SS,&
     & Bus1(1),Bus1(2),Bus1(3), 0, RVD1_2, RVD1_1, 0.05, 1.0, 1.0, 1.0,R&
     &VD1_3, 1.0,0.02,0.05, 1.0,0.02,0.05, RVD1_4, RVD1_5, RVD1_6, RVD1_&
     &7)

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = RT_1
      STOF(ISTOF + 2) = RT_2
      STOF(ISTOF + 3) = RT_3

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 3 + IT_0) = E9(IT_0)
         STOF(ISTOF + 6 + IT_0) = E7(IT_0)
         STOF(ISTOF + 9 + IT_0) = I9(IT_0)
         STOF(ISTOF + 12 + IT_0) = E4(IT_0)
         STOF(ISTOF + 15 + IT_0) = I7(IT_0)
         STOF(ISTOF + 18 + IT_0) = I4(IT_0)
         STOF(ISTOF + 21 + IT_0) = Ea_1(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    psseOut       ! 
      REAL    EMTDC_VVDC    ! 
!     SUBR    T7_8Out       ! 
!     SUBR    T8_9Out       ! 
!     SUBR    T5_7Out       ! 
!     SUBR    T6_9Out       ! 
!     SUBR    T4_5Out       ! 
!     SUBR    T4_6Out       ! 
      REAL    E_VZNO50      ! Access calculated energy of arrester

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices
      INTEGER  Bus9(3), Bus7(3), Bus4(3)

! Control Signals
      REAL     RT_1, RT_2, RT_3, E9(3), E7(3)
      REAL     I9(3), E4(3), I7(3), I4(3)
      REAL     Ea_1(3)

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 18
      INODE     = NNODE + 2
      NNODE     = NNODE + 38
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 72
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 9
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_1     = STOF(ISTOF + 1)
      RT_2     = STOF(ISTOF + 2)
      RT_3     = STOF(ISTOF + 3)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         E9(IT_0) = STOF(ISTOF + 3 + IT_0)
         E7(IT_0) = STOF(ISTOF + 6 + IT_0)
         I9(IT_0) = STOF(ISTOF + 9 + IT_0)
         E4(IT_0) = STOF(ISTOF + 12 + IT_0)
         I7(IT_0) = STOF(ISTOF + 15 + IT_0)
         I4(IT_0) = STOF(ISTOF + 18 + IT_0)
         Ea_1(IT_0) = STOF(ISTOF + 21 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         Bus9(IT_0) = NODE(INODE + 0 + IT_0)
         Bus7(IT_0) = NODE(INODE + 6 + IT_0)
         Bus4(IT_0) = NODE(INODE + 21 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[psse]  
      CALL psseOut()


! 20:[const] Real Constant 

      RT_2 = 1.0

! 30:[voltmetergnd] Voltmeter (Line - Ground) 'E7'
      E7(1) = EMTDC_VVDC(SS, Bus7(1), 0)
      E7(2) = EMTDC_VVDC(SS, Bus7(2), 0)
      E7(3) = EMTDC_VVDC(SS, Bus7(3), 0)

! 40:[voltmetergnd] Voltmeter (Line - Ground) 'Ea_1'
      Ea_1(1) = EMTDC_VVDC(SS, Bus7(1), 0)
      Ea_1(2) = EMTDC_VVDC(SS, Bus7(2), 0)
      Ea_1(3) = EMTDC_VVDC(SS, Bus7(3), 0)

! 60:[ammeter] Current Meter 'I7'
      I7(1) = ( CBR((IBRCH+40), SS))
      I7(2) = ( CBR((IBRCH+41), SS))
      I7(3) = ( CBR((IBRCH+42), SS))

! 70:[const] Real Constant 

      RT_1 = 1.0

! 80:[voltmetergnd] Voltmeter (Line - Ground) 'E9'
      E9(1) = EMTDC_VVDC(SS, Bus9(1), 0)
      E9(2) = EMTDC_VVDC(SS, Bus9(2), 0)
      E9(3) = EMTDC_VVDC(SS, Bus9(3), 0)

! 90:[T7_8]  
      CALL T7_8Out()


! 100:[T8_9]  
      CALL T8_9Out()


! 110:[ammeter] Current Meter 'I9'
      I9(1) = ( CBR((IBRCH+13), SS))
      I9(2) = ( CBR((IBRCH+14), SS))
      I9(3) = ( CBR((IBRCH+15), SS))

! 130:[T5_7]  
      CALL T5_7Out()


! 140:[T6_9]  
      CALL T6_9Out()


! 150:[T4_5]  
      CALL T4_5Out()


! 160:[T4_6]  
      CALL T4_6Out()


! 170:[voltmetergnd] Voltmeter (Line - Ground) 'E4'
      E4(1) = EMTDC_VVDC(SS, Bus4(1), 0)
      E4(2) = EMTDC_VVDC(SS, Bus4(2), 0)
      E4(3) = EMTDC_VVDC(SS, Bus4(3), 0)

! 180:[ammeter] Current Meter 'I4'
      I4(1) = ( CBR((IBRCH+70), SS))
      I4(2) = ( CBR((IBRCH+71), SS))
      I4(3) = ( CBR((IBRCH+72), SS))

! 190:[const] Real Constant 

      RT_3 = 1.0

! 210:[pgb] Output Channel 'I4'

      DO IVD1_1 = 1, 3
         PGB(IPGB+1+IVD1_1-1) = I4(IVD1_1)
      ENDDO

! 220:[pgb] Output Channel 'E4'

      DO IVD1_1 = 1, 3
         PGB(IPGB+4+IVD1_1-1) = E4(IVD1_1)
      ENDDO

! 230:[pgb] Output Channel 'I7'

      DO IVD1_1 = 1, 3
         PGB(IPGB+7+IVD1_1-1) = I7(IVD1_1)
      ENDDO

! 240:[pgb] Output Channel 'E7'

      DO IVD1_1 = 1, 3
         PGB(IPGB+10+IVD1_1-1) = E7(IVD1_1)
      ENDDO

! 250:[pgb] Output Channel 'I9'

      DO IVD1_1 = 1, 3
         PGB(IPGB+13+IVD1_1-1) = I9(IVD1_1)
      ENDDO

! 260:[pgb] Output Channel 'E9'

      DO IVD1_1 = 1, 3
         PGB(IPGB+16+IVD1_1-1) = E9(IVD1_1)
      ENDDO

! 1:[arrester] Arrester 
!

! 1:[arrester] Arrester 
!

! 1:[arrester] Arrester 
!

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = RT_1
      STOF(ISTOF + 2) = RT_2
      STOF(ISTOF + 3) = RT_3

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 3 + IT_0) = E9(IT_0)
         STOF(ISTOF + 6 + IT_0) = E7(IT_0)
         STOF(ISTOF + 9 + IT_0) = I9(IT_0)
         STOF(ISTOF + 12 + IT_0) = E4(IT_0)
         STOF(ISTOF + 15 + IT_0) = I7(IT_0)
         STOF(ISTOF + 18 + IT_0) = I4(IT_0)
         STOF(ISTOF + 21 + IT_0) = Ea_1(IT_0)
      END DO


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainDyn_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    psseDyn_Begin  ! 
!     SUBR    T7_8Dyn_Begin  ! 
!     SUBR    T8_9Dyn_Begin  ! 
!     SUBR    T5_7Dyn_Begin  ! 
!     SUBR    T6_9Dyn_Begin  ! 
!     SUBR    T4_5Dyn_Begin  ! 
!     SUBR    T4_6Dyn_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2, RT_3

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD100_1(100)
      REAL     RVD100_2(100)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 38
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 72
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 9
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[psse]  
      CALL psseDyn_Begin()


! 20:[const] Real Constant 
      RT_2 = 1.0

! 50:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      CALL COMPONENT_ID(ICALL_NO,984500741)
      RVD1_1 = ONE_3RD*100.0
      RVD1_2 = 18.0*SQRT_1BY3
      RVD1_3 = 33.0*SQRT_1BY3
      CALL E_TF2W_CFG((IXFMR + 1),1,RVD1_1,60.0,0.0625,0.0,RVD1_2,RVD1_3&
     &,2.0)
      CALL E_TF2W_CFG((IXFMR + 2),1,RVD1_1,60.0,0.0625,0.0,RVD1_2,RVD1_3&
     &,2.0)
      CALL E_TF2W_CFG((IXFMR + 3),1,RVD1_1,60.0,0.0625,0.0,RVD1_2,RVD1_3&
     &,2.0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(100.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+28),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+29),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+30),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+31),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+32),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+33),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+34), (IBRCH+35), (IBRCH+36),SS,RVD1_1,RVD1_&
     &2,0.2,1.17,60.0,0.0,2.0,0.0)

! 70:[const] Real Constant 
      RT_1 = 1.0

! 90:[T7_8]  
      CALL T7_8Dyn_Begin()


! 100:[T8_9]  
      CALL T8_9Dyn_Begin()


! 120:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      CALL COMPONENT_ID(ICALL_NO,170974727)
      RVD1_1 = ONE_3RD*100.0
      RVD1_2 = 13.8*SQRT_1BY3
      RVD1_3 = 33.0*SQRT_1BY3
      CALL E_TF2W_CFG((IXFMR + 4),1,RVD1_1,60.0,0.0586,0.0,RVD1_2,RVD1_3&
     &,2.0)
      CALL E_TF2W_CFG((IXFMR + 5),1,RVD1_1,60.0,0.0586,0.0,RVD1_2,RVD1_3&
     &,2.0)
      CALL E_TF2W_CFG((IXFMR + 6),1,RVD1_1,60.0,0.0586,0.0,RVD1_2,RVD1_3&
     &,2.0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(100.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+1),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+2),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+3),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+4),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+5),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+6),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+7), (IBRCH+8), (IBRCH+9),SS,RVD1_1,RVD1_2,0&
     &.2,1.17,60.0,0.0,2.0,0.0)

! 130:[T5_7]  
      CALL T5_7Dyn_Begin()


! 140:[T6_9]  
      CALL T6_9Dyn_Begin()


! 150:[T4_5]  
      CALL T4_5Dyn_Begin()


! 160:[T4_6]  
      CALL T4_6Dyn_Begin()


! 190:[const] Real Constant 
      RT_3 = 1.0

! 200:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      CALL COMPONENT_ID(ICALL_NO,241387401)
      RVD1_1 = ONE_3RD*100.0
      RVD1_2 = 16.5*SQRT_1BY3
      RVD1_3 = 33.0*SQRT_1BY3
      CALL E_TF2W_CFG((IXFMR + 7),1,RVD1_1,60.0,0.0576,0.0,RVD1_2,RVD1_3&
     &,2.0)
      CALL E_TF2W_CFG((IXFMR + 8),1,RVD1_1,60.0,0.0576,0.0,RVD1_2,RVD1_3&
     &,2.0)
      CALL E_TF2W_CFG((IXFMR + 9),1,RVD1_1,60.0,0.0576,0.0,RVD1_2,RVD1_3&
     &,2.0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(100.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+58),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+59),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+60),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+61),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+62),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+63),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+64), (IBRCH+65), (IBRCH+66),SS,RVD1_1,RVD1_&
     &2,0.2,1.17,60.0,0.0,2.0,0.0)

! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
      CALL COMPONENT_ID(ICALL_NO,1515890201)
      RVD1_1 = 1.0
      RVD1_2 = 0.1
      CALL ESYS651_CFG(3,4,1,0,1,SS, (IBRCH+25), (IBRCH+26), (IBRCH+27),&
     &0,0,0, 60.0,60.0,9.3507,18.45,1.63,0.04903,100.0,18.0, 18.0, 1.0, &
     &80.0, 2.0, 1.0,1.0,0.1, 1.0,80.0,1.0,0.1)

! 1:[arrester] Arrester 
      CALL COMPONENT_ID(ICALL_NO,1846882272)
      RVD100_1 = 0.0
      RVD100_2 = 0.0
      RVD100_1(1)  = 0.001
      RVD100_2(1)  = 1.1
      RVD100_1(2)  = 0.01
      RVD100_2(2)  = 1.6
      RVD100_1(3)  = 0.1
      RVD100_2(3)  = 1.7
      RVD100_1(4)  = 0.2
      RVD100_2(4)  = 1.739
      RVD100_1(5)  = 0.38
      RVD100_2(5)  = 1.777
      RVD100_1(6)  = 0.65
      RVD100_2(6)  = 1.815
      RVD100_1(7)  = 1.11
      RVD100_2(7)  = 1.853
      RVD100_1(8)  = 1.5
      RVD100_2(8)  = 1.881
      RVD100_1(9)  = 2.0
      RVD100_2(9)  = 1.91
      RVD100_1(10) = 2.8
      RVD100_2(10) = 1.948
      RVD100_1(11) = 200.0
      RVD100_2(11) = 3.2
      CALL ARRESTERZNO_CFG(SS, (IBRCH+37),0,24.0,1.0,RVD100_1,RVD100_2,"&
     &../datafile")
      CALL ARRESTERZNO_CFG(SS, (IBRCH+38),0,24.0,1.0,RVD100_1,RVD100_2,"&
     &../datafile")
      CALL ARRESTERZNO_CFG(SS, (IBRCH+39),0,24.0,1.0,RVD100_1,RVD100_2,"&
     &../datafile")

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,1412276095)
      CALL LOAD1P2_CFG(0,1,132.790562,1.0,60.0,33.33333,11.66667,10.0,0.&
     &0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,1.0)

! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
      CALL COMPONENT_ID(ICALL_NO,341249837)
      RVD1_1 = 1.0
      RVD1_2 = 0.1
      CALL ESYS651_CFG(3,4,1,0,1,SS, (IBRCH+10), (IBRCH+11), (IBRCH+12),&
     &0,0,0, 60.0,60.0,5.142,14.145,0.85,-0.11449,100.0,13.8, 13.8, 1.0,&
     & 80.0, 2.0, 1.0,1.0,0.1, 1.0,80.0,1.0,0.1)

! 1:[arrester] Arrester 
      CALL COMPONENT_ID(ICALL_NO,2035328747)
      RVD100_1 = 0.0
      RVD100_2 = 0.0
      RVD100_1(1)  = 0.001
      RVD100_2(1)  = 1.1
      RVD100_1(2)  = 0.01
      RVD100_2(2)  = 1.6
      RVD100_1(3)  = 0.1
      RVD100_2(3)  = 1.7
      RVD100_1(4)  = 0.2
      RVD100_2(4)  = 1.739
      RVD100_1(5)  = 0.38
      RVD100_2(5)  = 1.777
      RVD100_1(6)  = 0.65
      RVD100_2(6)  = 1.815
      RVD100_1(7)  = 1.11
      RVD100_2(7)  = 1.853
      RVD100_1(8)  = 1.5
      RVD100_2(8)  = 1.881
      RVD100_1(9)  = 2.0
      RVD100_2(9)  = 1.91
      RVD100_1(10) = 2.8
      RVD100_2(10) = 1.948
      RVD100_1(11) = 200.0
      RVD100_2(11) = 3.2
      CALL ARRESTERZNO_CFG(SS, (IBRCH+16),0,24.0,1.0,RVD100_1,RVD100_2,"&
     &../datafile")
      CALL ARRESTERZNO_CFG(SS, (IBRCH+17),0,24.0,1.0,RVD100_1,RVD100_2,"&
     &../datafile")
      CALL ARRESTERZNO_CFG(SS, (IBRCH+18),0,24.0,1.0,RVD100_1,RVD100_2,"&
     &../datafile")

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,1275297413)
      CALL LOAD1P2_CFG(0,1,132.790562,1.0,60.0,41.66667,16.66667,10.0,0.&
     &0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,1.0)

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,1442847532)
      CALL LOAD1P2_CFG(0,1,132.790562,1.0,60.0,30.0,10.0,10.0,0.0,0.0,0.&
     &0,0.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,1.0)

! 1:[arrester] Arrester 
      CALL COMPONENT_ID(ICALL_NO,646045917)
      RVD100_1 = 0.0
      RVD100_2 = 0.0
      RVD100_1(1)  = 0.001
      RVD100_2(1)  = 1.1
      RVD100_1(2)  = 0.01
      RVD100_2(2)  = 1.6
      RVD100_1(3)  = 0.1
      RVD100_2(3)  = 1.7
      RVD100_1(4)  = 0.2
      RVD100_2(4)  = 1.739
      RVD100_1(5)  = 0.38
      RVD100_2(5)  = 1.777
      RVD100_1(6)  = 0.65
      RVD100_2(6)  = 1.815
      RVD100_1(7)  = 1.11
      RVD100_2(7)  = 1.853
      RVD100_1(8)  = 1.5
      RVD100_2(8)  = 1.881
      RVD100_1(9)  = 2.0
      RVD100_2(9)  = 1.91
      RVD100_1(10) = 2.8
      RVD100_2(10) = 1.948
      RVD100_1(11) = 200.0
      RVD100_2(11) = 3.2
      CALL ARRESTERZNO_CFG(SS, (IBRCH+67),0,24.0,1.0,RVD100_1,RVD100_2,"&
     &../datafile")
      CALL ARRESTERZNO_CFG(SS, (IBRCH+68),0,24.0,1.0,RVD100_1,RVD100_2,"&
     &../datafile")
      CALL ARRESTERZNO_CFG(SS, (IBRCH+69),0,24.0,1.0,RVD100_1,RVD100_2,"&
     &../datafile")

! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
      CALL COMPONENT_ID(ICALL_NO,333691943)
      RVD1_1 = 1.0
      RVD1_2 = 0.1
      CALL ESYS651_CFG(3,4,1,0,1,SS, (IBRCH+55), (IBRCH+56), (IBRCH+57),&
     &0,0,0, 60.0,60.0,0.0,17.16,0.71627,0.27915,100.0,16.5, 16.5, 1.0, &
     &80.0, 2.0, 1.0,1.0,0.1, 1.0,80.0,1.0,0.1)

      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    psseOut_Begin  ! 
!     SUBR    T7_8Out_Begin  ! 
!     SUBR    T8_9Out_Begin  ! 
!     SUBR    T5_7Out_Begin  ! 
!     SUBR    T6_9Out_Begin  ! 
!     SUBR    T4_5Out_Begin  ! 
!     SUBR    T4_6Out_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  Bus9(3), Bus7(3), Bus4(3)

! Control Signals
      REAL     RT_1, RT_2, RT_3

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 38
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 72
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 9
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         Bus9(IT_0) = NODE(INODE + 0 + IT_0)
         Bus7(IT_0) = NODE(INODE + 6 + IT_0)
         Bus4(IT_0) = NODE(INODE + 21 + IT_0)
      END DO

!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[psse]  
      CALL psseOut_Begin()


! 20:[const] Real Constant 
      RT_2 = 1.0

! 70:[const] Real Constant 
      RT_1 = 1.0

! 90:[T7_8]  
      CALL T7_8Out_Begin()


! 100:[T8_9]  
      CALL T8_9Out_Begin()


! 130:[T5_7]  
      CALL T5_7Out_Begin()


! 140:[T6_9]  
      CALL T6_9Out_Begin()


! 150:[T4_5]  
      CALL T4_5Out_Begin()


! 160:[T4_6]  
      CALL T4_6Out_Begin()


! 190:[const] Real Constant 
      RT_3 = 1.0

! 210:[pgb] Output Channel 'I4'

! 220:[pgb] Output Channel 'E4'

! 230:[pgb] Output Channel 'I7'

! 240:[pgb] Output Channel 'E7'

! 250:[pgb] Output Channel 'I9'

! 260:[pgb] Output Channel 'E9'

      RETURN
      END

